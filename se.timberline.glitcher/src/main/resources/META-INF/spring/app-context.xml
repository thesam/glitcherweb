<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<description>Example configuration to get you started.</description>

	<context:component-scan base-package="se.timberline.glitcher.persistence" />

	<!-- <bean id="greeter" class="se.timberline.glitcher.Greeter"> <property 
		name="yourName" value="Samuel"/> </bean> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost/xdb" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="HSQL" />
		<property name="showSql" value="true" />
		<property name="generateDdl" value="false" />
		<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
	</bean>

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="glitcherService" class="se.timberline.glitcher.service.GlitcherServiceImpl">
		<property name="glitcherDao" ref="glitcherDao" />
	</bean>

	<!-- TRANSACTION CONFIGURATION -->
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>

	<tx:annotation-driven />
	
	<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616"/>
	</bean>
	
	<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="glitcher.queue"/>
	</bean>
	
	<bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="glitcher.topic"/>
	</bean>
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="defaultDestinationName" value="glitcher.queue"/>
	</bean>
	
	<bean id="alertService" class="se.timberline.glitcher.alerts.AlertServiceImpl">
	</bean>
	

	<!-- REMOTE SERVICE CONFIGURATION -->
<!-- 	<bean class="org.springframework.remoting.rmi.RmiServiceExporter"> -->
<!-- 		<property name="service" ref="glitcherService" /> -->
<!-- 		<property name="serviceName" value="GlitcherService" /> -->
<!-- 		<property name="serviceInterface" value="se.timberline.glitcher.GlitcherService" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="RemoteGlitcherService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean"> -->
<!-- 		<property name="serviceUrl" value="rmi://localhost/GlitcherService" /> -->
<!-- 		<property name="serviceInterface" value="se.timberline.glitcher.GlitcherService" /> -->
<!-- 	</bean> -->

	<!-- HESSIAN AND BURLAP SERVICE CONFIGURATION -->
<!-- 	<bean id="hessianGlitcherService" -->
<!-- 		class="org.springframework.remoting.caucho.HessianServiceExporter" -->
<!-- 		p:service-ref="glitcherService" p:serviceInterface="se.timberline.glitcher.GlitcherService" /> -->

<!-- 	<bean id="RemoteHessianGlitcherService" -->
<!-- 		class="org.springframework.remoting.caucho.HessianProxyFactoryBean"> -->
<!-- 		<property name="serviceUrl" -->
<!-- 			value="http://localhost:8080/se.timberline.glitcher/glitcher.hessian" /> -->
<!-- 		<property name="serviceInterface" value="se.timberline.glitcher.GlitcherService" /> -->
<!-- 		<property name="overloadEnabled" value="true" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="burlapGlitcherService" -->
<!-- 		class="org.springframework.remoting.caucho.BurlapServiceExporter" -->
<!-- 		p:service-ref="glitcherService" p:serviceInterface="se.timberline.glitcher.GlitcherService" /> -->

<!-- 	<bean id="RemoteBurlapGlitcherService" -->
<!-- 		class="org.springframework.remoting.caucho.BurlapProxyFactoryBean"> -->
<!-- 		<property name="serviceUrl" -->
<!-- 			value="http://localhost:8080/se.timberline.glitcher/glitcher.burlap" /> -->
<!-- 		<property name="serviceInterface" value="se.timberline.glitcher.GlitcherService" /> -->
<!-- 	</bean> -->

	<!-- SPRING HTTP INVOKER -->
<!-- 	<bean id="httpInvokerGlitcherService" -->
<!-- 		class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter" -->
<!-- 		p:service-ref="glitcherService" p:serviceInterface="se.timberline.glitcher.GlitcherService" /> -->

<!-- 	<bean id="RemoteHttpInvokerGlitcherService" -->
<!-- 		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean"> -->
<!-- 		<property name="serviceUrl" -->
<!-- 			value="http://localhost:8080/se.timberline.glitcher/glitcher.httpinvoker" /> -->
<!-- 		<property name="serviceInterface" value="se.timberline.glitcher.GlitcherService" /> -->
<!-- 	</bean> -->

</beans>
